// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: shorturls.sql

package db

import (
	"context"
)

const deleteSurl = `-- name: DeleteSurl :exec
DELETE FROM shorturls
WHERE sid = $1
`

func (q *Queries) DeleteSurl(ctx context.Context, sid int32) error {
	_, err := q.db.Exec(ctx, deleteSurl, sid)
	return err
}

const insertSurl = `-- name: InsertSurl :one
INSERT INTO shorturls (short_code , original_url)
VALUES ('temp' , $1)
RETURNING sid, short_code, original_url, created_at
`

func (q *Queries) InsertSurl(ctx context.Context, originalUrl string) (Shorturl, error) {
	row := q.db.QueryRow(ctx, insertSurl, originalUrl)
	var i Shorturl
	err := row.Scan(
		&i.Sid,
		&i.ShortCode,
		&i.OriginalUrl,
		&i.CreatedAt,
	)
	return i, err
}

const updateShortCode = `-- name: UpdateShortCode :exec
UPDATE shorturls
SET short_code = CONCAT(sid::VARCHAR(2) ,
	LEFT(encode(digest(original_url, 'sha256'), 'hex'), 6)
)
WHERE sid = $1
`

func (q *Queries) UpdateShortCode(ctx context.Context, sid int32) error {
	_, err := q.db.Exec(ctx, updateShortCode, sid)
	return err
}
